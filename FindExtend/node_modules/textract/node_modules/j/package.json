{
  "name": "j",
  "version": "0.4.3",
  "author": {
    "name": "sheetjs"
  },
  "description": "CLI tool for working with XLS/XLSX/XLSM/XLSB files",
  "keywords": [
    "excel",
    "xls",
    "xlsx",
    "xlsm",
    "xlsb",
    "office",
    "spreadsheet"
  ],
  "bin": {
    "j": "./bin/j.njs"
  },
  "files": [
    "LICENSE",
    "README.md",
    "bin",
    "j.js"
  ],
  "main": "./j",
  "dependencies": {
    "xlsjs": "~0.7.1",
    "xlsx": "~0.7.11",
    "harb": "~0.0.5",
    "concat-stream": "",
    "commander": ""
  },
  "devDependencies": {
    "mocha": ""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/SheetJS/j.git"
  },
  "scripts": {
    "test": "make mocha"
  },
  "config": {
    "blanket": {
      "pattern": "[./j.js,./node_modules/xlsjs/xls.js,./node_modules/xlsx/xlsx.js]"
    }
  },
  "bugs": {
    "url": "https://github.com/SheetJS/j/issues"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=0.8"
  },
  "readme": "# J\n\nSimple data wrapper that attempts to wrap SheetJS libraries to provide a uniform way to access data from Excel and other spreadsheet files:\n\n- JS-XLS: [xlsjs on npm](http://npm.im/xlsjs)\n- JS-XLSX: [xlsx on npm](http://npm.im/xlsx)\n- JS-HARB: [harb on npm](http://npm.im/harb)\n\nExcel files are parsed based on the content (not by filename).  For example, CSV files can be renamed to .XLS and excel will do the right thing.\n\nSupported Formats:\n\n| Format                  | Library |\n| :---------------------- | :------ |\n| XLS (BIFF5, 5.0-7.0)    | JS-XLS  |\n| XLS (BIFF8, 97-2003)    | JS-XLS  |\n| XLSX (2007+)            | JS-XLSX |\n| XLSM (2007+ w/macros)   | JS-XLSX |\n| XLSB (2007+ binary)     | JS-XLSX |\n| XML (2003/2004)         | JS-XLS  |\n| DIF (plaintext)         | JS-HARB |\n| UTF-16 Text             | JS-HARB |\n| CSV / TSV               | JS-HARB |\n| SYLK (Symbolic Link)    | JS-HARB |\n| ODS (OpenDocument)      | JS-XLSX |\n| SocialCalc              | JS-HARB |\n\nOutput formats:\n\n- XML and HTML work with [Excel Web Query](http://office.microsoft.com/en-us/excel-help/get-and-analyze-data-from-the-web-in-excel-HA001054848.aspx)\n- DSV (general delimiters, including CSV and TSV)\n- JSON\n- Formulae list (e.g. `A1=NOW()`, `A2=A1+3`)\n- XLSX / XLSM work with iOS Numbers and Excel\n- Markdown tables (GFM style)\n- SocialCalc output\n\n## Installation\n\n```\nnpm install -g j\n```\n\n## Node Library\n\n```\nvar J = require('j');\n```\n\n`J.readFile(filename)` opens the file specified by filename and returns an array\nwhose first object is the parsing object (XLS or XLSX) and whose second object\nis the parsed file.\n\n`J.utils` has various helpers that expect an array like those from readFile:\n\n- `to_csv(w) / to_dsv(w, delim)` will generate CSV/DSV respectively\n- `to_json(w)` will generate JSON row objects\n- `to_html(w)` will generate simple HTML tables\n- `to_formulae(w)` will generate lists of formulae\n- `to_xml(w)` will generate simple XML\n- `to_xlsx(w) / to_xlsm(w) / to_xlsb(w)` will generate XLSX/XLSM/XLSB workbooks\n- `to_md(w)` will generate markdown tables\n\n## CLI Tool\n\nThe node module ships with a binary `j` which has a help message:\n\n```\n$ j --help\n\n  Usage: j [options] <file> [sheetname]\n\n  Options:\n\n    -h, --help               output usage information\n    -V, --version            output the version number\n    -f, --file <file>        use specified file (- for stdin)\n    -s, --sheet <sheet>      print specified sheet (default first sheet)\n    -N, --sheet-index <idx>  use specified sheet index (0-based)\n    -l, --list-sheets        list sheet names and exit\n    -o, --output <file>      output to specified file\n    -B, --xlsb               emit XLSB to <sheetname> or <file>.xlsb\n    -M, --xlsm               emit XLSM to <sheetname> or <file>.xlsm\n    -X, --xlsx               emit XLSX to <sheetname> or <file>.xlsx\n    -S, --formulae           print formulae\n    -j, --json               emit formatted JSON (all fields text)\n    -J, --raw-js             emit raw JS object (raw numbers)\n    -x, --xml                emit XML\n    -H, --html               emit HTML\n    -m, --markdown           emit markdown table (with pipes)\n    -E, --socialcalc         emit socialcalc\n    -F, --field-sep <sep>    CSV field separator\n    -R, --row-sep <sep>      CSV row separator\n    -n, --sheet-rows <num>   Number of rows to process (0=all rows)\n    --dev                    development mode\n    --read                   read but do not print out contents\n    -q, --quiet              quiet mode\n```\n\n\n## License\n\nPlease consult the attached LICENSE file for details.  All rights not explicitly granted by the Apache 2.0 license are reserved by the Original Author.\n\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/cb2e495863d0096f50a923515c7331b6 \"githalytics.com\")](http://githalytics.com/SheetJS/j)\n\n[![Build Status](https://travis-ci.org/SheetJS/j.png?branch=master)](https://travis-ci.org/SheetJS/j)\n\n[![Coverage Status](https://coveralls.io/repos/SheetJS/j/badge.png)](https://coveralls.io/r/SheetJS/j)\n\n## Using J for diffing XLS/XLSB/XLSM/XLSX files\n\nUsing git textconv, you can use `J` to generate more meaningful diffs!\n\nOne-time configuration (`misc/gitdiff.sh`):\n\n```\n#!/bin/bash\n\n# Define a sheetjs diff type that uses j\ngit config --global diff.sheetjs.textconv \"j\"\n\n# Configure a user .gitattributes file that maps the xls{,x,m} files\ntouch ~/.gitattributes\ncat <<EOF >>~/.gitattributes\n*.xls diff=sheetjs\n*.xlsb diff=sheetjs\n*.xlsm diff=sheetjs\n*.xlsx diff=sheetjs\n*.XLS diff=sheetjs\n*.XLSB diff=sheetjs\n*.XLSM diff=sheetjs\n*.XLSX diff=sheetjs\nEOF\n\n# Set the .gitattributes to be used for all repos on the system:\ngit config --global core.attributesfile '~/.gitattributes'\n```\n\nIf you just want to compare formulae (for example, in a sheet using `NOW`):\n\n```\ngit config --global diff.sheetjs.textconv \"j -S\"\n```\n\n\nNOTE: There are some known issues regarding global modules in Windows.  The best\nbet is to `npm install j` in your git directory before diffing.\n\n## Notes\n\nSegmentation faults in node v0.10.31 stem from a bug in node.  J will throw an\nerror if it is running under that version.  Since versions prior to v0.10.30 do\nnot exhibit the problem, rolling back to a previous version of node is the best\nremedy.  See <https://github.com/joyent/node/issues/8208> for more information.\n",
  "readmeFilename": "README.md",
  "_id": "j@0.4.3",
  "_from": "j@0.4.3"
}
